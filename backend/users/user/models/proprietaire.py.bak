"""
Modèle pour les propriétaires
"""
from django.db import models
from django.core.validators import RegexValidator
from .base import BaseUser


class Proprietaire(BaseUser):
    """
    Modèle pour les propriétaires de biens immobiliers
    """
    
    # Informations professionnelles
    company_name = models.CharField(
        max_length=200,
        blank=True,
        help_text="Nom de l'entreprise (si applicable)"
    )
    
    siret_regex = RegexValidator(
        regex=r'^\d{14}$',
        message="Le SIRET doit contenir exactement 14 chiffres."
    )
    siret = models.CharField(
        validators=[siret_regex],
        max_length=14,
        blank=True,
        help_text="Numéro SIRET (14 chiffres)"
    )
    
    # Adresse professionnelle
    address = models.TextField(
        blank=True,
        help_text="Adresse complète"
    )
    city = models.CharField(
        max_length=100,
        blank=True,
        help_text="Ville"
    )
    postal_code = models.CharField(
        max_length=10,
        blank=True,
        help_text="Code postal"
    )
    country = models.CharField(
        max_length=100,
        default="France",
        help_text="Pays"
    )
    
    # Informations de contact supplémentaires
    secondary_email = models.EmailField(
        blank=True,
        help_text="Email secondaire"
    )
    website = models.URLField(
        blank=True,
        help_text="Site web"
    )
    
    # Préférences
    preferred_contact_method = models.CharField(
        max_length=20,
        choices=[
            ('email', 'Email'),
            ('phone', 'Téléphone'),
            ('sms', 'SMS'),
        ],
        default='email',
        help_text="Méthode de contact préférée"
    )
    
    # Statut et vérification
    is_company = models.BooleanField(
        default=False,
        help_text="Propriétaire entreprise ou particulier"
    )
    verification_documents_uploaded = models.BooleanField(
        default=False,
        help_text="Documents de vérification uploadés"
    )
    
    class Meta:
        verbose_name = "Propriétaire"
        verbose_name_plural = "Propriétaires"
        ordering = ['-created_at']
    
    def __str__(self):
        if self.is_company and self.company_name:
            return f"{self.company_name} ({self.get_full_name()})"
        return self.get_full_name()
    
    def get_display_name(self):
        """Retourne le nom d'affichage approprié"""
        if self.is_company and self.company_name:
            return self.company_name
        return self.get_full_name()
    
    def get_full_address(self):
        """Retourne l'adresse complète formatée"""
        if not self.address:
            return ""
        
        parts = [self.address]
        if self.postal_code and self.city:
            parts.append(f"{self.postal_code} {self.city}")
        if self.country and self.country != "France":
            parts.append(self.country)
        
        return ", ".join(parts)
    
    def is_verified_proprietaire(self):
        """Vérifie si le propriétaire est complètement vérifié"""
        return (
            self.is_verified and 
            self.verification_documents_uploaded and
            (not self.is_company or (self.is_company and self.siret))
        )
    
    def save(self, *args, **kwargs):
        """Override save pour définir automatiquement le user_type"""
        self.user_type = 'proprietaire'
        super().save(*args, **kwargs)
